continue
(routes + place_to_routes).flatten.map{|route|route if route.status == true}
(routes + place_to_routes).flatten.map{|route|route.status == true}
(routes + place_to_routes).flatten[2]
(routes + place_to_routes).flatten[1]
(routes + place_to_routes).flatten[0]
(routes + place_to_routes).released
routes
Route.all
(routes + place_to_routes).flatten.where(user_id: 2)
(routes + place_to_routes).flatten[0]
(routes + place_to_routes).flatten
(routes + place_to_routes)
place_to_routes[0]
place_to_routes
continue
place_to_routes
continue
(routes << place_to_routes)
(routes + place_to_routes).flatten.where(
(routes + place_to_routes).flatten
routes + place_to_routes
routes.released
place_to_routes
routes
continue
@routes
@places
continue
@spot.id
console.log("<%=@spot.id%>"
console.log("#{@spot.id}"
console.log("@spot.id"
@spot
n
continue
n
@number
@spot
continue
@places
continue
@places
@palces
continue
@next_spots && @next_spots != [nil]
@next_spots != [nil]
@next_spots
n
continue
@next_spots
@route_spots
continue
route_spots.find_by(order: spot.order + 1)
continue
route_spots.find_by(order: spot.order + 1)
route_spots.find_by(order: spot.order+1)
route_spots.find_by(order: spot.order +1)
route_spots
